(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{303:function(s,t,a){"use strict";a.r(t);var r=a(14),e=Object(r.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"二、查询性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、查询性能优化"}},[s._v("#")]),s._v(" 二、查询性能优化")]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#使用-explain-进行分析"}},[s._v("使用 Explain 进行分析")])]),t("li",[t("a",{attrs:{href:"#优化数据访问"}},[s._v("优化数据访问")])]),t("li",[t("a",{attrs:{href:"#重构查询方式"}},[s._v("重构查询方式")])])])]),t("p"),s._v(" "),t("h3",{attrs:{id:"使用-explain-进行分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-explain-进行分析"}},[s._v("#")]),s._v(" 使用 Explain 进行分析")]),s._v(" "),t("p",[s._v("Explain 用来分析 SELECT 查询语句，开发人员可以通过分析 Explain 结果来优化查询语句。")]),s._v(" "),t("p",[s._v("比较重要的字段有：")]),s._v(" "),t("ul",[t("li",[s._v("select_type : 查询类型，有简单查询、联合查询、子查询等")]),s._v(" "),t("li",[s._v("key : 使用的索引")]),s._v(" "),t("li",[s._v("rows : 扫描的行数")])]),s._v(" "),t("h3",{attrs:{id:"优化数据访问"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优化数据访问"}},[s._v("#")]),s._v(" 优化数据访问")]),s._v(" "),t("h4",{attrs:{id:"_1-减少请求的数据量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-减少请求的数据量"}},[s._v("#")]),s._v(" 1. 减少请求的数据量")]),s._v(" "),t("ul",[t("li",[s._v("只返回必要的列：最好不要使用 SELECT * 语句。")]),s._v(" "),t("li",[s._v("只返回必要的行：使用 LIMIT 语句来限制返回的数据。")]),s._v(" "),t("li",[s._v("缓存重复查询的数据：使用缓存可以避免在数据库中进行查询，特别在要查询的数据经常被重复查询时，缓存带来的查询性能提升将会是非常明显的。")])]),s._v(" "),t("h4",{attrs:{id:"_2-减少服务器端扫描的行数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-减少服务器端扫描的行数"}},[s._v("#")]),s._v(" 2. 减少服务器端扫描的行数")]),s._v(" "),t("p",[s._v("最有效的方式是使用索引来覆盖查询。")]),s._v(" "),t("h3",{attrs:{id:"重构查询方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重构查询方式"}},[s._v("#")]),s._v(" 重构查询方式")]),s._v(" "),t("h4",{attrs:{id:"_1-切分大查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-切分大查询"}},[s._v("#")]),s._v(" 1. 切分大查询")]),s._v(" "),t("p",[s._v("一个大查询如果一次性执行的话，可能一次锁住很多数据、占满整个事务日志、耗尽系统资源、阻塞很多小的但重要的查询。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" messages "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" DATE_SUB"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NOW")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTERVAL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MONTH")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("rows_affected "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" {\n    rows_affected "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" do_query"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DELETE FROM messages WHERE create  < DATE_SUB(NOW(), INTERVAL 3 MONTH) LIMIT 10000"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n} "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" rows_affected "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h4",{attrs:{id:"_2-分解大连接查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-分解大连接查询"}},[s._v("#")]),s._v(" 2. 分解大连接查询")]),s._v(" "),t("p",[s._v("将一个大连接查询分解成对每一个表进行一次单表查询，然后在应用程序中进行关联，这样做的好处有：")]),s._v(" "),t("ul",[t("li",[s._v("让缓存更高效。对于连接查询，如果其中一个表发生变化，那么整个查询缓存就无法使用。而分解后的多个查询，即使其中一个表发生变化，对其它表的查询缓存依然可以使用。")]),s._v(" "),t("li",[s._v("分解成多个单表查询，这些单表查询的缓存结果更可能被其它查询使用到，从而减少冗余记录的查询。")]),s._v(" "),t("li",[s._v("减少锁竞争；")]),s._v(" "),t("li",[s._v("在应用层进行连接，可以更容易对数据库进行拆分，从而更容易做到高性能和可伸缩。")]),s._v(" "),t("li",[s._v("查询本身效率也可能会有所提升。例如下面的例子中，使用 IN() 代替连接查询，可以让 MySQL 按照 ID 顺序进行查询，这可能比随机的连接要更高效。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tag\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" tag_post "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" tag_post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("JOIN")]),s._v(" post "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" tag_post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("post_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("tag"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mysql'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tag "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" tag"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mysql'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tag_post "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" tag_id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" post "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" post"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("IN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("567")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9098")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8904")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);